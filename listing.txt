  LL1 warning in IfStatement: "else" is the start & successor of a deletable structure

   1   COMPILER Parva $CN
   2   /* Parva level 1 grammar  - Coco/R for C# (EBNF)
   3      P.D. Terry, Rhodes University, 2003
   4      Grammar only */
   5 
   6   CHARACTERS
   7     lf         = CHR(10) .
   8     backslash  = CHR(92) .
   9     control    = CHR(0) .. CHR(31) .
  10     letter     = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  11                  + "abcdefghijklmnopqrstuvwxyz" .
  12     digit      = "0123456789" .
  13     stringCh   = ANY - '"' - control - backslash .
  14     charCh     = ANY - "'" - control - backslash .
  15     printable  = ANY - control .
  16 
  17   TOKENS
  18     identifier = letter { letter | digit | "_" } .
  19     number     = digit { digit } .
  20     stringLit  = '"' { stringCh | backslash printable } '"' .
  21     charLit    = "'" ( charCh   | backslash printable ) "'" .
  22 
  23   COMMENTS FROM "//" TO lf
  24   COMMENTS FROM "/*" TO "*/"
  25   IGNORE CHR(9) .. CHR(13)
  26 
  27   PRODUCTIONS
  28     Parva             = "void" identifier "(" ")" Block .
  29     Block             = "{" { Statement } "}" .
  30     Statement         =   Block | ";"
  31                         | ConstDeclarations | VarDeclarations
  32                         | Assignment | IfStatement | WhileStatement
  33                         | ReturnStatement | HaltStatement
  34                         | ReadStatement | WriteStatement
  35 						| DoWhileStatment .
  36     ConstDeclarations = "const" OneConst { "," OneConst } ";" .
  37     OneConst          = identifier "=" Constant .
  38     Constant          =   number | charLit
  39                         | "true" | "false" | "null" .
  40     VarDeclarations   = Type OneVar { "," OneVar } ";" .
  41     OneVar            = identifier [ "=" Expression ] .
  42     Assignment        = Designator "=" Expression ";" .
  43     Designator        = identifier [ "[" Expression "]" ] .
  44     IfStatement       = "if" "(" Condition ")" Statement ["else" Statement].
  45 	WhileStatement    = "while" "(" Condition ")" Statement .
  46 	DoWhileStatment	  = "do" Statement "while" "(" Condition ")" ";".
  47     ReturnStatement   = "return" ";" .
  48     HaltStatement     = "halt" ";" .
  49     ReadStatement     = "read" "(" ReadElement
  50                                    { "," ReadElement } ")" ";" .
  51     ReadElement       = stringLit | Designator .
  52     WriteStatement    = "write" "(" WriteElement
  53                                     { "," WriteElement } ")" ";" .
  54     WriteElement      = stringLit | Expression .
  55     Condition         = Expression .
  56     Expression        = AddExp [ RelOp AddExp ] .
  57     AddExp            = [ "+" | "-" ] Term { AddOp Term } .
  58     Term              = Factor { MulOp Factor } .
  59     Factor            =   Designator | Constant
  60                         | "new" BasicType "[" Expression "]"
  61                         | "!" Factor | "(" Expression ")" .
  62     Type              = BasicType [ "[]" ] .
  63     BasicType         = "int" | "bool" .
  64     AddOp             = "+" | "-" | "||" .
  65     MulOp             = "*" | "/" | "&&" | "%" .
  66     RelOp             = "==" | "!=" | "<" | "<=" | ">" | ">=" .
  67   END Parva.

0 errors detected
1 warnings detected
